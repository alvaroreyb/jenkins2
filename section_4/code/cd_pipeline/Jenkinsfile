#!/usr/bin/groovy

pipeline {
    agent none

    options {
        timeout(time: 1, unit: 'DAYS')
        disableConcurrentBuilds()
    }

    stages {

        stage("Build App") {
            agent any
            steps { buildApp() }
		}

        stage("Deploy to Test") {
            agent any
            steps { deploy('test') }
		}

        stage("Deploy to Stage") {
            agent any
            steps { deploy('stage') }
		}
	}
}


// steps
def buildApp() {
	dir ('section_4/code/cd_pipeline' ) {
		def appImage = docker.build("hands-on-jenkins/myapp_${BUILD_NUMBER}")
	}
}

def deploy(environment) {

	if ("${environment}" == 'test') {
		containerName = "app_test"
		port = "8888"
	} 
	else if ("${environment}" == 'stage') {
		containerName = "app_stage"
		port = "88"
	}
	else if ("${environment}" == 'prod') {
		containerName = "app_prod"
		port = "80"
	}
	else {
		println "Environment not valid"
		System.exit(0)
	}

	sh 'docker ps -f name="${containerName}" -q | xargs --no-run-if-empty docker container stop'
	sh 'docker container ls -a -fname="${containerName}" -q | xargs -r docker container rm'
	sh 'docker run -d -p "${port}":5000 --name "${containerName}" hands-on-jenkins/myapp_"${BUILD_NUMBER}"'
}
